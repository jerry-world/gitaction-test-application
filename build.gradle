/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/9.1.0/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'world.jerry'
version = '0.0.1-SNAPSHOT'

bootJar.enabled = false
jar.enabled = false


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    java {
        sourceCompatibility = '21'
    }

    repositories {
        mavenCentral()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    ext {
        springCloudVersion = "2023.0.0"
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
        }
        dependencies {
            dependency 'org.flywaydb:flyway-core:11.0.0'
        }
    }

    dependencies {
        // Apache Common
        implementation 'org.apache.commons:commons-lang3:3.13.0'
        implementation 'commons-io:commons-io:2.19.0'
        implementation 'org.apache.commons:commons-collections4:4.4'
        implementation 'org.apache.commons:commons-text:1.11.0'

        // Lombok
//        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // UUID
        implementation 'com.fasterxml.uuid:java-uuid-generator:5.1.0'

        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

}
// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
}