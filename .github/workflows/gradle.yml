name: PR Test & Analysis

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    types: [ opened, reopened, synchronize ]
    branches:
      - main
      - dev

concurrency:
  group: ci-pr-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  fetch-and-diff:
    runs-on: ubuntu-latest

    outputs:
      modified_modules: ${{ steps.determine_modules.outputs.modules }}

    steps:
      - name: Git Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch Base Branch
        run: git fetch origin +refs/heads/${{ github.ref_name }}:refs/remotes/origin/${{ github.ref_name }}

      - name: Get Modified Files
        run: |
          MODIFIED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }}  | tr '\n' ' ')
          echo $MODIFIED_FILES
          echo "MODIFIED_FILES=$MODIFIED_FILES" >> $GITHUB_ENV

      - name: Determine Modified Modules
        id: determine_modules
        run: |
          echo "${{ toJSON(env) }}"
          IFS=' ' read -r -a MODIFIED_FILES_ARRAY <<< "${{ env.MODIFIED_FILES }}"
          IFS=' ' read -r -a MODULES_ARRAY <<< "${{ env.MODULES }}"
          
          MODIFIED_MODULES=()
          for FILE in "${MODIFIED_FILES_ARRAY[@]}"; do
            for MODULE in "${MODULES_ARRAY[@]}"; do
              # 모듈 경로 변경 여부 체크
              if [[ "$FILE" == "$MODULE"* ]]; then
                if ! [[ " ${MODIFIED_MODULES[@]} " =~ " ${MODULE} " ]]; then
                  echo "Add Module($MODULE)"
                  MODIFIED_MODULES+=("$MODULE")
                  break
                fi
              fi
            done
          done
          
          # 변경 모듈 MATRIX 문자열 변환
          MODULE_MATRIX=""
          for MODULE in "${MODIFIED_MODULES[@]}"; do
            if [ -n "$MODULE_MATRIX" ]; then
              MODULE_MATRIX+=",\"${MODULE}\""
            else
              MODULE_MATRIX+="\"${MODULE}\""
            fi
          done
          
          MODULE_MATRIX="[$MODULE_MATRIX]"
          echo "MODIFIED_MODULE_MATRIX=$MODULE_MATRIX"
          echo "modules=$(echo $MODULE_MATRIX)" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_ID }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build
        run: |
          echo "${{ steps.determine_modules.outputs.modules }}"
          IFS=' ' read -r -a MODIFIED_MODULES <<< "${{ steps.determine_modules.outputs.modules }}"
          for MODULE in "${MODIFIED_MODULES[@]}"; do
            docker build -f ${MODULE}/Dockerfile -t jerryworld/${MODULE}:${{ github.sha }} .
            docker push jerryworld/${MODULE}:${{ github.sha }}
          done

  push-manifest:
    name: Push Manifest
    needs: fetch-and-diff
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: jerry-world/k8s-manifest-test
          ref: refs/heads/main
          token: ${{secrets.GIT_TOKEN}}
      - name: Update Patch
        run: |
          echo "${{ steps.determine_modules.outputs.modules }}"
          IFS=' ' read -r -a MODIFIED_MODULES <<< "${{ steps.determine_modules.outputs.modules }}"
          for MODULE in "${MODIFIED_MODULES[@]}"; do
            cd apps/${MODULE}/overlay/${{ github.ref_name }}
            after_sha="${{ github.sha }}"
            echo "${after_sha:0:8}"
            sed -i 's|\(image:[[:space:]]*[^:]*:[^[:space:]]*\)\(........\)$|\1'${after_sha:0:8}'|g' deployment-patch.yaml
            git add -A
            git commit -m "update manifest demo-dev"
          done
          
          git config --global user.email "sy920112@naver.com"
          git config --global user.name "jerry-world"
          git push